package ro.upt.cs.photosearch;import android.app.AlertDialog;import android.app.Dialog;import android.content.Context;import android.content.DialogInterface;import android.graphics.drawable.ColorDrawable;import android.net.Uri;import android.os.Bundle;import android.os.Environment;import android.support.annotation.NonNull;import android.support.v4.app.Fragment;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.Window;import android.widget.Button;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.Toast;import com.bumptech.glide.Glide;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.OnFailureListener;import com.google.android.gms.tasks.OnSuccessListener;import com.google.android.gms.tasks.Task;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.firestore.DocumentSnapshot;import com.google.firebase.firestore.FirebaseFirestore;import com.google.firebase.firestore.QuerySnapshot;import com.google.firebase.storage.FirebaseStorage;import com.google.firebase.storage.StorageReference;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;import java.nio.charset.Charset;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Date;import java.util.List;import ro.upt.cs.photosearch.MyPhoto;import org.apache.sanselan.ImageReadException;import org.apache.sanselan.ImageWriteException;import org.apache.sanselan.common.IImageMetadata;import org.apache.sanselan.formats.jpeg.JpegImageMetadata;import org.apache.sanselan.formats.jpeg.exifRewrite.ExifRewriter;import org.apache.sanselan.formats.tiff.TiffField;import org.apache.sanselan.formats.tiff.TiffImageMetadata;import org.apache.sanselan.formats.tiff.constants.ExifTagConstants;import org.apache.sanselan.formats.tiff.constants.GPSTagConstants;import org.apache.sanselan.formats.tiff.write.TiffOutputDirectory;import org.apache.sanselan.formats.tiff.write.TiffOutputField;import org.apache.sanselan.formats.tiff.write.TiffOutputSet;public class    RecycleViewFragment extends Fragment {    private static final Charset UTF8 = Charset.forName("UTF-8");    private static final String DATE_FORMAT = "yyyy:MM:dd HH:mm:ss";    private RecyclerView recyclerView;    private RecyclerView.LayoutManager layoutManager;    ArrayList<MyPhoto> photoList = new ArrayList<>();    private String TAG = RecycleViewFragment.this.getTag();    private Button device_picture;    private Button cloud_picture;    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        int colomns = 2;        View view = inflater.inflate(R.layout.recycle_view, container, false);        device_picture = (Button) view.findViewById(R.id.device_photo);        cloud_picture = (Button) view.findViewById(R.id.cloud_photo);        final ImageView image = view.findViewById(R.id.img);        recyclerView = (RecyclerView) view.findViewById(R.id.my_recycle_view);        recyclerView.setHasFixedSize(true);        layoutManager = new GridLayoutManager(getContext(), colomns);        recyclerView.setLayoutManager(layoutManager);        final RecycleViewAdapter adapter = new RecycleViewAdapter(this.getContext(), photoList);        recyclerView.setAdapter(adapter);        device_picture.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                prepareData();                adapter.notifyDataSetChanged();            }        });        cloud_picture.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                FirebaseFirestore.getInstance().collection("photos").whereEqualTo("uid",FirebaseAuth.getInstance().getCurrentUser().getUid()).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {                    @Override                    public void onComplete(@NonNull Task<QuerySnapshot> task) {                             if(task.isSuccessful()) {                                 List<DocumentSnapshot> photos = task.getResult().getDocuments();                                 if(photos.size() == 0) {                                     Toast.makeText(RecycleViewFragment.this.getContext(), "No photos in cloud", Toast.LENGTH_SHORT).show();                                     return;                                 }                                 photoList.clear();                                 for(DocumentSnapshot doc : photos) {                                     MyPhoto p = doc.toObject(MyPhoto.class);                                     p.cloud = true;                                     photoList.add(p);                                 }                                 adapter.notifyDataSetChanged();                             }                             else {                                 Log.e(TAG,task.getException().toString());                             }                    }                });            }        });        return  view;    }    private void prepareData() {        File path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);        path = new File(path, getResources().getString(R.string.app_name));        if(!path.exists()) {            Toast.makeText(this.getContext(),"No photos on SD CARD",Toast.LENGTH_SHORT).show();            return;        }        photoList.clear();        File file[] = path.listFiles();        for (int i = 0; i < file.length; i++) {            MyPhoto p = new MyPhoto();            File f = file[i];            p.url = f.getAbsolutePath();            photoList.add(p);        }        if (photoList.isEmpty()){            Toast.makeText(this.getContext(), "No photos in album",Toast.LENGTH_SHORT).show();        }    }    public static class PictureSaveException extends Exception {        PictureSaveException(Throwable innerException) {            super(innerException);        }    }}